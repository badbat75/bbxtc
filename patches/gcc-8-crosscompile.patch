--- config/override.m4.orig	2018-10-17 17:29:22.610183600 +0200
+++ config/override.m4	2018-10-17 17:29:38.599906000 +0200
@@ -29,7 +29,7 @@
 
 dnl Ensure exactly this Autoconf version is used
 m4_ifndef([_GCC_AUTOCONF_VERSION],
-  [m4_define([_GCC_AUTOCONF_VERSION], [2.64])])
+  [m4_define([_GCC_AUTOCONF_VERSION], [2.69])])
 
 dnl Test for the exact version when AC_INIT is expanded.
 dnl This allows to update the tree in steps (for testing)
--- libcc1/configure.ac.orig	2018-10-17 17:04:43.743054500 +0200
+++ libcc1/configure.ac	2018-10-17 17:23:27.180032400 +0200
@@ -72,6 +72,31 @@
 fi
 AC_SUBST(libsuffix)
 
+# Figure out what objdump we will be using.
+AS_VAR_SET_IF(gcc_cv_objdump,, [
+if test -f $gcc_cv_binutils_srcdir/configure.in \
+     && test -f ../binutils/Makefile \
+     && test x$build = x$host; then
+       # Single tree build which includes binutils.
+       gcc_cv_objdump=../binutils/objdump$build_exeext
+elif test -x objdump$build_exeext; then
+       gcc_cv_objdump=./objdump$build_exeext
+elif ( set dummy $OBJDUMP_FOR_TARGET; test -x $[2] ); then
+        gcc_cv_objdump="$OBJDUMP_FOR_TARGET"
+else
+        AC_PATH_PROG(gcc_cv_objdump, $OBJDUMP_FOR_TARGET)
+fi])
+
+AC_MSG_CHECKING(what objdump to use)
+if test "$gcc_cv_objdump" = ../binutils/objdump$build_exeext; then
+       # Single tree build which includes binutils.
+       AC_MSG_RESULT(newly built objdump)
+elif test x$gcc_cv_objdump = x; then
+       AC_MSG_RESULT(not found)
+else
+       AC_MSG_RESULT($gcc_cv_objdump)
+fi
+
 dnl Test for -lsocket and -lnsl.  Copied from libgo/configure.ac.
 AC_CACHE_CHECK([for socket libraries], libcc1_cv_lib_sockets,
   [libcc1_cv_lib_sockets=
